#######################################################
# This stub is autogenerated
########################################################

import robot_command.rpl


def calculate_user_frame_3(origin_wp: robot_command.rpl.Pose, x_axis_wp: robot_command.rpl.Pose, y_axis_wp: robot_command.rpl.Pose) -> robot_command.rpl.Pose:
	"""
	Calculates the user frame origin pose based on 3 waypoints that lie on a plane.
	
	The angular unit of all input poses must be in radians.
	
	:param origin_wp: Origin of the plane.
	:param x_axis_wp: A waypoint that lies on the X-axis of the plane.
	:param y_axis_wp: A waypoint that lies in the direction of the Y-axis of the plane.
	:return: Origin waypoint of the constructed user frame.
	"""
	...

def calculate_user_frame_4(origin_wp: robot_command.rpl.Pose, x_axis_wp: robot_command.rpl.Pose, y_axis_wp: robot_command.rpl.Pose, position_wp: robot_command.rpl.Pose) -> robot_command.rpl.Pose:
	"""
	Calculates the user frame origin pose based on 3 waypoints that lie on a plane
	and one additional waypoint which is used to define the origin location.
	
	The angular unit of all input poses must be in radians.
	
	:param origin_wp: Origin of the plane.
	:param x_axis_wp: A waypoint that lies on the X-axis of the plane.
	:param y_axis_wp: A waypoint that lies in the direction of the Y-axis of the plane.
	:param position_wp: Origin location of the new user frame.
	:return: Origin waypoint of the constructed user frame.
	"""
	...

def calculate_tool_frame_4(wp1: robot_command.rpl.Pose, wp2: robot_command.rpl.Pose, wp3: robot_command.rpl.Pose, wp4: robot_command.rpl.Pose) -> robot_command.rpl.Pose:
	"""
	Calculate the XYZ coordinates of the tool frame using 4 waypoints using the
	center of sphere method.
	
	:param wp1: Waypoint 1
	:param wp2: Waypoint 2
	:param wp3: Waypoint 3
	:param wp4: Waypoint 4
	:return: The tool frame pose containing the XYZ tool frame.
	"""
	...

